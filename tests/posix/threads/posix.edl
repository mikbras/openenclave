// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

enclave
{
    struct posix_timespec
    {
        int64_t tv_sec;
        uint64_t tv_nsec;
    };

    trusted
    {
        public void posix_test_ecall([user_check] int* host_uaddr);

        public int posix_run_thread_ecall(
            uint64_t cookie,
            [user_check] int* host_uaddr);
    };

    untrusted
    {
        int posix_start_thread_ocall(uint64_t cookie);

        int posix_futex_wait_ocall(
            [user_check] int* uaddr,
            int futex_op,
            int val,
            [in, count=1] const struct posix_timespec* timeout);

        int posix_futex_wake_ocall(
            [user_check] int* uaddr,
            int futex_op,
            int val);

        int posix_nanosleep_ocall(
            [in] const struct posix_timespec* req,
            [out] struct posix_timespec* rem);

        int posix_gettid_ocall();

        int posix_wait_ocall(
            [user_check] int* host_uaddr,
            [in, count=1] const struct posix_timespec* timeout);

        void posix_wake_ocall([user_check] int* host_uaddr);

        int posix_wake_wait_ocall(
            [user_check] int* waiter_host_uaddr,
            [user_check] int* self_host_uaddr,
            [in, count=1] const struct posix_timespec* timeout);

        int posix_clock_gettime_ocall(
            int clk_id,
            [out, count=1] struct posix_timespec* tp);

        int posix_tkill_ocall(int tid, int sig);
    };
};
